buildscript{
    ext.web_dir = 'web'
    ext.kotlin_version = '1.3.31'
    ext.frontend_version = '0.0.37'

    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://dl.bintray.com/kotlin/kotlin-eap"
        }
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:$frontend_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

// apply plugin
apply plugin: 'org.jetbrains.kotlin.frontend'

apply plugin: 'kotlin2js'

apply plugin: 'maven'
apply plugin: 'maven-publish'


group "com.rnett.kframejs"
version "1.1.0"

/*
apply plugin: 'kotlin-dce-js'

runDceKotlinJs.keep "kframejs_main.com.rnett.kframejs.structure"
runDceKotlinJs.keep "kframejs_main.com.rnett.kframejs.structure.displayElement_9kf5g0\$"
*/
apply plugin: 'kotlinx-serialization'

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://kotlin.bintray.com/kotlinx" }
    maven{ url 'https://jitpack.io' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:1.3.11"

    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:0.11.0"
    api "com.github.rnett:kframejs:$kframejs_version"
}

compileKotlin2Js {
    kotlinOptions.sourceMap = true
    kotlinOptions.sourceMapEmbedSources = "always"
    kotlinOptions.moduleKind = "amd"
}

task assembleWeb(type: Sync) {
    configurations.compile.each { File file ->
        from(zipTree(file.absolutePath), {
            includeEmptyDirs = false
            include { fileTreeElement ->
                def path = fileTreeElement.path
                path.endsWith(".js") && (path.startsWith("META-INF/resources/") ||
                        !path.startsWith("META-INF/"))
            }
        })
    }
    from compileKotlin2Js.destinationDir
    into "$buildDir/$web_dir"

    dependsOn classes
}

assemble.dependsOn assembleWeb

kotlinFrontend {
    npm {

    }
    webpackBundle {
        bundleName = "main"
        contentPath = file('src/main/web')
        mode = 'development'
        //mode = 'production'
    }

    downloadNodeJsVersion = "latest"
}

apply plugin: 'maven-publish'
apply plugin: 'java'

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        Publication(MavenPublication) {
            from components.java
            groupId "com.rnett.kframejs"
            artifactId "kframejs-bootstrap"
            version "1.0.0"

            artifact sourcesJar
        }
    }
}